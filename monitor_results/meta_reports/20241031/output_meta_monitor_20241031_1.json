{
    "endpoint": "https://k8s.opencitations.net/meta/sparql",
    "collection": "OpenCitations Meta",
    "datetime": "31/10/2024, 09:53:49",
    "running_time": 222.0215609073639,
    "config_fp": "meta_monitor_config.json",
    "monitoring_results": [
        {
            "label": "duplicate_br",
            "description": "There is at least one case of multiple fabio:Expression entities sharing the same ID value for any given scheme (e.g. the same DOI is linked to 2 separate journal articles.",
            "query": "PREFIX datacite: <http://purl.org/spar/datacite/>\nPREFIX literal: <http://www.essepuntato.it/2010/06/literalreification/>\nPREFIX fabio: <http://purl.org/spar/fabio/>\n\nASK {\n    ?br1 datacite:hasIdentifier/literal:hasLiteralValue ?lit ;\n    a fabio:Expression .\n    ?br2 datacite:hasIdentifier/literal:hasLiteralValue ?lit ;\n    a fabio:Expression .\n    FILTER(?br1 != ?br2)\n}",
            "run": {
                "got_result": true,
                "running_time": 2.011432647705078,
                "error": null
            },
            "passed": false
        },
        {
            "label": "multiple_id_values",
            "description": "There are more than 10000 BRs that have 2 or more values for at least one of their supported ID schemes (e.g. 2 DOIs for a single journal article).",
            "query": "PREFIX datacite: <http://purl.org/spar/datacite/>\nPREFIX fabio: <http://purl.org/spar/fabio/>\n\nASK {\n  {\n    SELECT (COUNT(DISTINCT ?br) AS ?count)\n    WHERE {\n      ?br a fabio:Expression .\n      ?br datacite:hasIdentifier ?id1 .\n      ?br datacite:hasIdentifier ?id2 .\n      ?id1 datacite:usesIdentifierScheme ?scheme .\n      ?id2 datacite:usesIdentifierScheme ?scheme .\n      FILTER (?id1 != ?id2)\n      FILTER (?scheme != datacite:issn)\n    }\n  }\n  FILTER(?count > 10000)\n}",
            "run": {
                "got_result": true,
                "running_time": 202.49559664726257,
                "error": null
            },
            "passed": false
        },
        {
            "label": "duplicate_agent",
            "description": "There is at least one case of multiple foaf:Agent entities sharing the same ID value for any given scheme (e.g. different authors have the same ORCID).",
            "query": "PREFIX datacite: <http://purl.org/spar/datacite/>\nPREFIX literal: <http://www.essepuntato.it/2010/06/literalreification/>\nPREFIX foaf: <http://xmlns.com/foaf/0.1/>\n\nASK {\n    ?agent1 datacite:hasIdentifier/literal:hasLiteralValue ?lit ;\n    a foaf:Agent .\n    ?agent2 datacite:hasIdentifier/literal:hasLiteralValue ?lit ;\n    a foaf:Agent .\n    FILTER(?agent1 != ?agent2)\n}",
            "run": {
                "got_result": true,
                "running_time": 0.14098358154296875,
                "error": null
            },
            "passed": false
        },
        {
            "label": "multiple_manifestations",
            "description": "There are more than 15 BRs that are embodied in multiple fabio:Manifestation entities.",
            "query": "PREFIX frbr: <http://purl.org/vocab/frbr/core#>\nPREFIX fabio: <http://purl.org/spar/fabio/>\n\nASK {\n  {\n    SELECT (COUNT(DISTINCT ?br) as ?count) {\n      ?br frbr:partOf ?venue;\n        a fabio:Expression;\n        frbr:embodiment ?man1, ?man2.\n      FILTER(?man1 != ?man2)\n      FILTER NOT EXISTS {\n        ?br frbr:partOf ?otherVenue .\n      FILTER(?venue != ?otherVenue)\n      }\n    }\n  }\n  FILTER(?count > 15)\n}",
            "run": {
                "got_result": true,
                "running_time": 6.372395753860474,
                "error": null
            },
            "passed": true
        },
        {
            "label": "br_in_multiple_venues",
            "description": "There are more than 1000 BRs that (wrongly) appear to be contained in different venues (e.g. journals).",
            "query": "PREFIX frbr: <http://purl.org/vocab/frbr/core#>\nPREFIX fabio: <http://purl.org/spar/fabio/>\n\nASK {\n  {\n    SELECT (COUNT(DISTINCT ?br) AS ?count) {\n      ?br frbr:partOf ?venue1 ;\n        frbr:partOf ?venue2 . \n      # ?venue1 and ?venue2 have the same type (any type)\n      ?venue1 a ?type .\n      ?venue2 a ?type .\n      FILTER(?venue1 != ?venue2)\n      FILTER(?type != fabio:Expression)  # Exclude fabio:Expression type\n    }\n  }\n  FILTER (?count > 1000)\n}",
            "run": {
                "got_result": true,
                "running_time": 11.001152276992798,
                "error": null
            },
            "passed": false
        }
    ]
}